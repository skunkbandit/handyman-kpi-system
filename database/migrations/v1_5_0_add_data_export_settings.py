"""\nMigration script v1.5.0 - Add report and data export settings\n"""\n\ndef upgrade(connection):\n    """\n    Create tables for configuring reports and data exports\n    """\n    cursor = connection.cursor()\n    \n    # Create report_templates table\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS report_templates (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            name TEXT NOT NULL,\n            description TEXT,\n            template_type TEXT NOT NULL,\n            config JSON NOT NULL,\n            is_system BOOLEAN NOT NULL DEFAULT 0,\n            created_by INTEGER,\n            created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            FOREIGN KEY (created_by) REFERENCES users (id) ON DELETE SET NULL\n        );\n    ''')\n    \n    # Create scheduled_exports table\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS scheduled_exports (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            name TEXT NOT NULL,\n            description TEXT,\n            report_template_id INTEGER NOT NULL,\n            schedule TEXT NOT NULL,  -- cron expression\n            file_format TEXT NOT NULL,  -- 'PDF', 'EXCEL', 'CSV'\n            parameters JSON,\n            last_run DATETIME,\n            next_run DATETIME,\n            is_active BOOLEAN NOT NULL DEFAULT 1,\n            created_by INTEGER,\n            created_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            updated_at DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            FOREIGN KEY (report_template_id) REFERENCES report_templates (id) ON DELETE CASCADE,\n            FOREIGN KEY (created_by) REFERENCES users (id) ON DELETE SET NULL\n        );\n    ''')\n    \n    # Create export_history table\n    cursor.execute('''\n        CREATE TABLE IF NOT EXISTS export_history (\n            id INTEGER PRIMARY KEY AUTOINCREMENT,\n            scheduled_export_id INTEGER,\n            report_template_id INTEGER NOT NULL,\n            file_name TEXT NOT NULL,\n            file_path TEXT NOT NULL,\n            file_size INTEGER,\n            export_time DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,\n            status TEXT NOT NULL,  -- 'SUCCESS', 'FAILED'\n            error_message TEXT,\n            user_id INTEGER,\n            FOREIGN KEY (scheduled_export_id) REFERENCES scheduled_exports (id) ON DELETE SET NULL,\n            FOREIGN KEY (report_template_id) REFERENCES report_templates (id) ON DELETE CASCADE,\n            FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE SET NULL\n        );\n    ''')\n    \n    # Create indexes\n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_report_templates_type \n        ON report_templates(template_type);\n    ''')\n    \n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_scheduled_exports_active \n        ON scheduled_exports(is_active);\n    ''')\n    \n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_scheduled_exports_next_run \n        ON scheduled_exports(next_run);\n    ''')\n    \n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_export_history_time \n        ON export_history(export_time);\n    ''')\n    \n    # Insert default system report templates\n    cursor.execute('''\n        INSERT INTO report_templates (name, description, template_type, config, is_system)\n        VALUES \n        ('Employee Performance', 'Standard employee performance report', 'EMPLOYEE', \n         '{"sections": ["personal_info", "skill_ratings", "tool_proficiency", "progress_chart", "goals"], "chart_types": ["radar", "line"]}', 1),\n        ('Team Performance', 'Team-wide performance metrics', 'TEAM', \n         '{"sections": ["team_overview", "skill_distribution", "improvement_areas", "top_performers"], "chart_types": ["bar", "radar", "heatmap"]}', 1),\n        ('Skill Analysis', 'Detailed skill distribution analysis', 'SKILL', \n         '{"sections": ["skill_overview", "category_breakdown", "tier_comparison", "training_needs"], "chart_types": ["bar", "pie", "line"]}', 1),\n        ('Tool Inventory', 'Tool proficiency and ownership report', 'TOOL', \n         '{"sections": ["tool_overview", "category_breakdown", "ownership_stats", "training_needs"], "chart_types": ["bar", "pie"]}', 1);\n    ''')\n    \n    # Update schema version\n    cursor.execute('''\n        INSERT OR REPLACE INTO schema_version (version, updated_at)\n        VALUES ('1.5.0', datetime('now'));\n    ''')\n    \n    connection.commit()\n    \n    return True\n\n\ndef downgrade(connection):\n    """\n    Remove report and data export settings tables\n    """\n    cursor = connection.cursor()\n    \n    # Drop tables\n    cursor.execute('DROP TABLE IF EXISTS export_history;')\n    cursor.execute('DROP TABLE IF EXISTS scheduled_exports;')\n    cursor.execute('DROP TABLE IF EXISTS report_templates;')\n    \n    # Update schema version back to previous version\n    cursor.execute('''\n        INSERT OR REPLACE INTO schema_version (version, updated_at)\n        VALUES ('1.4.0', datetime('now'));\n    ''')\n    \n    connection.commit()\n    \n    return True