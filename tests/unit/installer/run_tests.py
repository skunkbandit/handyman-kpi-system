#!/usr/bin/env python3\n"""\nTest runner for the Handyman KPI System Installer unit tests.\n\nThis script discovers and runs all unit tests for the installer components.\n"""\n\nimport os\nimport sys\nimport unittest\nimport coverage\n\n# Add the main project directory to the path\nsys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../../../')))\n\n\ndef run_tests(with_coverage=False):\n    """\n    Run all unit tests for the installer components.\n    \n    Args:\n        with_coverage (bool): Whether to measure code coverage\n    \n    Returns:\n        int: Number of test failures\n    """\n    # Get the directory containing the test modules\n    test_dir = os.path.dirname(os.path.abspath(__file__))\n    \n    # Create test suite\n    loader = unittest.TestLoader()\n    suite = loader.discover(test_dir, pattern='test_*.py')\n    \n    if with_coverage:\n        # Start coverage measurement\n        cov = coverage.Coverage(\n            source=['installer.shared.database'],\n            omit=['*/__pycache__/*', '*/tests/*']\n        )\n        cov.start()\n    \n    # Run the tests\n    runner = unittest.TextTestRunner(verbosity=2)\n    result = runner.run(suite)\n    \n    if with_coverage:\n        # Stop coverage measurement and report\n        cov.stop()\n        print("\nCoverage report:")\n        cov.report()\n        \n        # Generate HTML report\n        html_dir = os.path.join(test_dir, 'coverage_html')\n        os.makedirs(html_dir, exist_ok=True)\n        cov.html_report(directory=html_dir)\n        print(f"HTML coverage report generated in: {html_dir}")\n    \n    # Return the number of failures\n    return len(result.failures) + len(result.errors)\n\n\nif __name__ == '__main__':\n    # Parse command-line arguments\n    measure_coverage = '--cov' in sys.argv\n    \n    # Run the tests\n    print("Running installer unit tests...")\n    failures = run_tests(with_coverage=measure_coverage)\n    \n    # Exit with appropriate code\n    sys.exit(failures)