"""\nMigration script v1.3.0 - Add performance indexes to improve query speed\n"""\n\ndef upgrade(connection):\n    """\n    Add performance indexes for commonly queried tables\n    """\n    cursor = connection.cursor()\n    \n    # Create indexes for evaluations table to speed up dashboard queries\n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_evaluations_employee_id \n        ON evaluations(employee_id);\n    ''')\n    \n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_evaluations_date \n        ON evaluations(evaluation_date);\n    ''')\n    \n    # Create indexes for skill evaluations\n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_eval_skills_evaluation_id \n        ON eval_skills(evaluation_id);\n    ''')\n    \n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_eval_skills_skill_id \n        ON eval_skills(skill_id);\n    ''')\n    \n    # Create indexes for tool evaluations\n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_eval_tools_evaluation_id \n        ON eval_tools(evaluation_id);\n    ''')\n    \n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_eval_tools_tool_id \n        ON eval_tools(tool_id);\n    ''')\n    \n    # Create indexes for report generation\n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_employees_tier \n        ON employees(tier);\n    ''')\n    \n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_special_skills_employee_id \n        ON special_skills(employee_id);\n    ''')\n    \n    # Create index for users\n    cursor.execute('''\n        CREATE INDEX IF NOT EXISTS idx_users_role \n        ON users(role);\n    ''')\n    \n    # Update schema version\n    cursor.execute('''\n        INSERT OR REPLACE INTO schema_version (version, updated_at)\n        VALUES ('1.3.0', datetime('now'));\n    ''')\n    \n    connection.commit()\n    \n    return True\n\n\ndef downgrade(connection):\n    """\n    Remove the indexes created in this migration\n    """\n    cursor = connection.cursor()\n    \n    # Drop all indexes created in this migration\n    cursor.execute('DROP INDEX IF EXISTS idx_evaluations_employee_id;')\n    cursor.execute('DROP INDEX IF EXISTS idx_evaluations_date;')\n    cursor.execute('DROP INDEX IF EXISTS idx_eval_skills_evaluation_id;')\n    cursor.execute('DROP INDEX IF EXISTS idx_eval_skills_skill_id;')\n    cursor.execute('DROP INDEX IF EXISTS idx_eval_tools_evaluation_id;')\n    cursor.execute('DROP INDEX IF EXISTS idx_eval_tools_tool_id;')\n    cursor.execute('DROP INDEX IF EXISTS idx_employees_tier;')\n    cursor.execute('DROP INDEX IF EXISTS idx_special_skills_employee_id;')\n    cursor.execute('DROP INDEX IF EXISTS idx_users_role;')\n    \n    # Update schema version back to previous version\n    cursor.execute('''\n        INSERT OR REPLACE INTO schema_version (version, updated_at)\n        VALUES ('1.2.0', datetime('now'));\n    ''')\n    \n    connection.commit()\n    \n    return True